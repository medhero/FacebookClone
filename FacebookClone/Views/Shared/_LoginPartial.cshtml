@using FacebookClone.Helpers
@using Microsoft.AspNet.Identity
@model FacebookClone.Models.Account.LoginViewModel


@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
    {
        @Html.AntiForgeryToken()
        

        <ul class="nav navbar-nav">
                <li class="nav-item">
                    @Html.ActionLink("Find a Friend", "FriendRecomendation","Friends", routeValues: null, htmlAttributes: new { @class = "nav-link", title = "Manage" })
                </li>
    
            <li class="nav-item">
                @Html.ActionLink("Hello " + User.Identity.Name + "!", "ProfileViewModel", "ProfileVM", routeValues: null, htmlAttributes: new { @class = "nav-link", title = "Manage" })
            </li>
            <li class="nav-item"><a class="nav-link" href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav">
        <li class="nav-item">
            @{ Html.EnableClientValidation(false); }
            @using (Html.BeginForm("HomeLogin", "Account", null, FormMethod.Post, new { @class = "form-check-inline" }))
            {
                @Html.AntiForgeryToken()
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control mr-2", placeholder = "Email", id = "loginEmail" })
                @Html.PasswordFor(m => m.Password, new { @class = "form-control mr-2", placeholder = "password", id = "loginPassword" })
                @Html.HiddenFor(m => m.RememberMe, new { value = false })
                <input type="submit" value="Log in" class="btn btn-light" />
            }
            @{ Html.EnableClientValidation(true); }
        </li>
    </ul>
}
